// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IoBuffer.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_IoBuffer_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_IoBuffer_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4023000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4023001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_IoBuffer_2eproto

PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_IoBuffer_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable
    descriptor_table_IoBuffer_2eproto;
namespace IoBuffer {
class Summary;
struct SummaryDefaultTypeInternal;
extern SummaryDefaultTypeInternal _Summary_default_instance_;
}  // namespace IoBuffer
PROTOBUF_NAMESPACE_OPEN
template <>
::IoBuffer::Summary* Arena::CreateMaybeMessage<::IoBuffer::Summary>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

namespace IoBuffer {

// ===================================================================


// -------------------------------------------------------------------

class Summary final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:IoBuffer.Summary) */ {
 public:
  inline Summary() : Summary(nullptr) {}
  ~Summary() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Summary(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Summary(const Summary& from);
  Summary(Summary&& from) noexcept
    : Summary() {
    *this = ::std::move(from);
  }

  inline Summary& operator=(const Summary& from) {
    CopyFrom(from);
    return *this;
  }
  inline Summary& operator=(Summary&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Summary& default_instance() {
    return *internal_default_instance();
  }
  static inline const Summary* internal_default_instance() {
    return reinterpret_cast<const Summary*>(
               &_Summary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Summary& a, Summary& b) {
    a.Swap(&b);
  }
  inline void Swap(Summary* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Summary* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Summary* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Summary>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Summary& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const Summary& from) {
    Summary::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Summary* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "IoBuffer.Summary";
  }
  protected:
  explicit Summary(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRAvrgFieldNumber = 1,
    kRstdFieldNumber = 2,
    kWAvrgFieldNumber = 3,
    kWstdFieldNumber = 4,
    kRSizeFieldNumber = 5,
    kWSizeFieldNumber = 6,
    kRIopsFieldNumber = 7,
    kWIopsFieldNumber = 8,
  };
  // optional uint32 rAvrg = 1;
  bool has_ravrg() const;
  void clear_ravrg() ;
  ::uint32_t ravrg() const;
  void set_ravrg(::uint32_t value);

  private:
  ::uint32_t _internal_ravrg() const;
  void _internal_set_ravrg(::uint32_t value);

  public:
  // optional uint32 rstd = 2;
  bool has_rstd() const;
  void clear_rstd() ;
  ::uint32_t rstd() const;
  void set_rstd(::uint32_t value);

  private:
  ::uint32_t _internal_rstd() const;
  void _internal_set_rstd(::uint32_t value);

  public:
  // optional uint32 wAvrg = 3;
  bool has_wavrg() const;
  void clear_wavrg() ;
  ::uint32_t wavrg() const;
  void set_wavrg(::uint32_t value);

  private:
  ::uint32_t _internal_wavrg() const;
  void _internal_set_wavrg(::uint32_t value);

  public:
  // optional uint32 wstd = 4;
  bool has_wstd() const;
  void clear_wstd() ;
  ::uint32_t wstd() const;
  void set_wstd(::uint32_t value);

  private:
  ::uint32_t _internal_wstd() const;
  void _internal_set_wstd(::uint32_t value);

  public:
  // optional uint32 rSize = 5;
  bool has_rsize() const;
  void clear_rsize() ;
  ::uint32_t rsize() const;
  void set_rsize(::uint32_t value);

  private:
  ::uint32_t _internal_rsize() const;
  void _internal_set_rsize(::uint32_t value);

  public:
  // optional uint32 wSize = 6;
  bool has_wsize() const;
  void clear_wsize() ;
  ::uint32_t wsize() const;
  void set_wsize(::uint32_t value);

  private:
  ::uint32_t _internal_wsize() const;
  void _internal_set_wsize(::uint32_t value);

  public:
  // optional double rIops = 7;
  bool has_riops() const;
  void clear_riops() ;
  double riops() const;
  void set_riops(double value);

  private:
  double _internal_riops() const;
  void _internal_set_riops(double value);

  public:
  // optional double wIops = 8;
  bool has_wiops() const;
  void clear_wiops() ;
  double wiops() const;
  void set_wiops(double value);

  private:
  double _internal_wiops() const;
  void _internal_set_wiops(double value);

  public:
  // @@protoc_insertion_point(class_scope:IoBuffer.Summary)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::uint32_t ravrg_;
    ::uint32_t rstd_;
    ::uint32_t wavrg_;
    ::uint32_t wstd_;
    ::uint32_t rsize_;
    ::uint32_t wsize_;
    double riops_;
    double wiops_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_IoBuffer_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Summary

// optional uint32 rAvrg = 1;
inline bool Summary::has_ravrg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Summary::clear_ravrg() {
  _impl_.ravrg_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t Summary::ravrg() const {
  // @@protoc_insertion_point(field_get:IoBuffer.Summary.rAvrg)
  return _internal_ravrg();
}
inline void Summary::set_ravrg(::uint32_t value) {
  _internal_set_ravrg(value);
  // @@protoc_insertion_point(field_set:IoBuffer.Summary.rAvrg)
}
inline ::uint32_t Summary::_internal_ravrg() const {
  return _impl_.ravrg_;
}
inline void Summary::_internal_set_ravrg(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.ravrg_ = value;
}

// optional uint32 rstd = 2;
inline bool Summary::has_rstd() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Summary::clear_rstd() {
  _impl_.rstd_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t Summary::rstd() const {
  // @@protoc_insertion_point(field_get:IoBuffer.Summary.rstd)
  return _internal_rstd();
}
inline void Summary::set_rstd(::uint32_t value) {
  _internal_set_rstd(value);
  // @@protoc_insertion_point(field_set:IoBuffer.Summary.rstd)
}
inline ::uint32_t Summary::_internal_rstd() const {
  return _impl_.rstd_;
}
inline void Summary::_internal_set_rstd(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.rstd_ = value;
}

// optional uint32 wAvrg = 3;
inline bool Summary::has_wavrg() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Summary::clear_wavrg() {
  _impl_.wavrg_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t Summary::wavrg() const {
  // @@protoc_insertion_point(field_get:IoBuffer.Summary.wAvrg)
  return _internal_wavrg();
}
inline void Summary::set_wavrg(::uint32_t value) {
  _internal_set_wavrg(value);
  // @@protoc_insertion_point(field_set:IoBuffer.Summary.wAvrg)
}
inline ::uint32_t Summary::_internal_wavrg() const {
  return _impl_.wavrg_;
}
inline void Summary::_internal_set_wavrg(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.wavrg_ = value;
}

// optional uint32 wstd = 4;
inline bool Summary::has_wstd() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Summary::clear_wstd() {
  _impl_.wstd_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t Summary::wstd() const {
  // @@protoc_insertion_point(field_get:IoBuffer.Summary.wstd)
  return _internal_wstd();
}
inline void Summary::set_wstd(::uint32_t value) {
  _internal_set_wstd(value);
  // @@protoc_insertion_point(field_set:IoBuffer.Summary.wstd)
}
inline ::uint32_t Summary::_internal_wstd() const {
  return _impl_.wstd_;
}
inline void Summary::_internal_set_wstd(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.wstd_ = value;
}

// optional uint32 rSize = 5;
inline bool Summary::has_rsize() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Summary::clear_rsize() {
  _impl_.rsize_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t Summary::rsize() const {
  // @@protoc_insertion_point(field_get:IoBuffer.Summary.rSize)
  return _internal_rsize();
}
inline void Summary::set_rsize(::uint32_t value) {
  _internal_set_rsize(value);
  // @@protoc_insertion_point(field_set:IoBuffer.Summary.rSize)
}
inline ::uint32_t Summary::_internal_rsize() const {
  return _impl_.rsize_;
}
inline void Summary::_internal_set_rsize(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.rsize_ = value;
}

// optional uint32 wSize = 6;
inline bool Summary::has_wsize() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void Summary::clear_wsize() {
  _impl_.wsize_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t Summary::wsize() const {
  // @@protoc_insertion_point(field_get:IoBuffer.Summary.wSize)
  return _internal_wsize();
}
inline void Summary::set_wsize(::uint32_t value) {
  _internal_set_wsize(value);
  // @@protoc_insertion_point(field_set:IoBuffer.Summary.wSize)
}
inline ::uint32_t Summary::_internal_wsize() const {
  return _impl_.wsize_;
}
inline void Summary::_internal_set_wsize(::uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.wsize_ = value;
}

// optional double rIops = 7;
inline bool Summary::has_riops() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void Summary::clear_riops() {
  _impl_.riops_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline double Summary::riops() const {
  // @@protoc_insertion_point(field_get:IoBuffer.Summary.rIops)
  return _internal_riops();
}
inline void Summary::set_riops(double value) {
  _internal_set_riops(value);
  // @@protoc_insertion_point(field_set:IoBuffer.Summary.rIops)
}
inline double Summary::_internal_riops() const {
  return _impl_.riops_;
}
inline void Summary::_internal_set_riops(double value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.riops_ = value;
}

// optional double wIops = 8;
inline bool Summary::has_wiops() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void Summary::clear_wiops() {
  _impl_.wiops_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline double Summary::wiops() const {
  // @@protoc_insertion_point(field_get:IoBuffer.Summary.wIops)
  return _internal_wiops();
}
inline void Summary::set_wiops(double value) {
  _internal_set_wiops(value);
  // @@protoc_insertion_point(field_set:IoBuffer.Summary.wIops)
}
inline double Summary::_internal_wiops() const {
  return _impl_.wiops_;
}
inline void Summary::_internal_set_wiops(double value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.wiops_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace IoBuffer


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_IoBuffer_2eproto_2epb_2eh
